# Generated by Django 5.1.1 on 2025-02-07 10:07

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kra',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('kra_id', models.CharField(max_length=100)),
                ('kra_questions', models.TextField()),
                ('answer_type', models.CharField(max_length=50)),
                ('activate', models.BooleanField(default=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PlanOfAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('poa', models.TextField(blank=True)),
                ('poa_points', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('year', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('designation', models.CharField(max_length=255)),
                ('emp_code', models.CharField(max_length=200, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('answer', models.TextField()),
                ('user_rating', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('primary_reviewer_id', models.IntegerField()),
                ('secondary_reviewer_id', models.IntegerField()),
                ('emp_code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='emp_code')),
                ('kra_id', models.ManyToManyField(related_name='user', to='pmsapp.kra')),
                ('poa_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pmsapp.planofaction')),
            ],
        ),
        migrations.AddField(
            model_name='planofaction',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pmsapp.user'),
        ),
    ]
